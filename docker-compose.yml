version: '3.8'

services:
  # API Service
  api:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=password
      - MYSQL_DATABASE=ecommerce
      - NODE_ENV=development
      - TYPEORM_MIGRATIONS_RUN=false
    networks:
      - ecommerce-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ecommerce-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ecommerce
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - ecommerce-network
    command: --default-authentication-plugin=mysql_native_password
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G

  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: ecommerce-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongouser
      - MONGO_INITDB_ROOT_PASSWORD=mongopass
      - MONGO_INITDB_DATABASE=ecommerce
    volumes:
      - mongodb-data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d
    command: --wiredTigerCacheSizeGB 1
    networks:
      - ecommerce-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1.5G

  # Redis
  redis:
    image: redis:7.0
    container_name: ecommerce-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass redispass --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
      - ./docker/redis/init:/docker-entrypoint-initdb.d
    networks:
      - ecommerce-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  # Redis Commander (Redis UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ecommerce-redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:redispass
    networks:
      - ecommerce-network
    depends_on:
      - redis
    restart: unless-stopped

  # MongoDB Express (MongoDB UI)
  mongo-express:
    image: mongo-express:latest
    container_name: ecommerce-mongo-express
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=mongouser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=mongopass
      - ME_CONFIG_MONGODB_URL=mongodb://mongouser:mongopass@mongodb:27017/
    networks:
      - ecommerce-network
    depends_on:
      - mongodb
    restart: unless-stopped

  # phpMyAdmin (MySQL UI)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: ecommerce-phpmyadmin
    ports:
      - "8083:80"
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - MYSQL_ROOT_PASSWORD=rootpass
    networks:
      - ecommerce-network
    depends_on:
      - mysql
    restart: unless-stopped

networks:
  ecommerce-network:
    driver: bridge

volumes:
  mysql-data:
  mongodb-data:
  redis-data: 